{
  "$schema": "https://json.schemastore.org/tsconfig",
  "extends": "./.svelte-kit/tsconfig.json",
  "compilerOptions": {
    "lib": ["esnext", "dom", "dom.iterable"],
    "types": ["svelte", "jest", "@testing-library/jest-dom"],
    /**
			svelte-preprocess cannot figure out whether you have a value or a type, so tell TypeScript
			to enforce using \`import type\` instead of \`import\` for Types.
    */
    "importsNotUsedAsValues": "error",
    "baseUrl": ".",
    "paths": {
      "$lib": ["src/lib"],
      "$lib/*": ["src/lib/*"],
      "$api/*": ["src/api/*"],
      "$components/*": ["src/components/*"],
      "$config": ["src/config"],
      "$context": ["src/context"],
      "$elements/*": ["src/elements/*"],
      "$stores/*": ["src/stores/*"],
      "$utils/*": ["src/utils/*"],
      "$types/*": ["src/types/*"]
    },
    "moduleResolution": "node",
    "module": "esnext",
    "target": "esnext",
    "declaration": true,
    "declarationDir": "./dist",
    "isolatedModules": true,
    "resolveJsonModule": true,
    "sourceMap": true,
    "esModuleInterop": true,
    "skipLibCheck": true,
    "forceConsistentCasingInFileNames": true,
    "allowSyntheticDefaultImports": true,
    "allowJs": true,
    "strict": true
  },
  "include": ["src/**/*.d.ts", "src/**/*.js", "src/**/*.ts", "src/**/*.svelte"],
  "exclude": ["node_modules"]
}
